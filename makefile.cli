ifeq ($(OS),Windows_NT)
detected_OS:= Windows
else ifeq ($(shell uname -s),Darwin)
	detected_OS:= OSX
else
	detected_OS:= Linux
endif

#static building
ifndef STATIC
	override STATIC=0
endif
ifeq (${STATIC}, 1)
	DEFS+= -DSTATIC
	ifeq (${detected_OS},Linux)
		LIBS+=-Wl,-Bstatic -lz -lpthread_nonshared
	endif
endif

#Configure for 32/64 Bit
ifndef 32BIT
	override 32BIT= 0
endif
ifeq (${32BIT}, 1)
	BUILD_ARCH=x86
	CXXFLAGS+= -m32
else
	BUILD_ARCH=x64
	CXXFLAGS+= -m64
endif


#Define default LIB and INCLUDE path variables
ifndef OPENSSL_LIB_PATH
	ifeq ($(detected_OS),Windows)
		OPENSSL_LIB_PATH= "C:\deps\lib"
	endif
	ifeq ($(detected_OS),OSX)
		OPENSSL_LIB_PATH= /usr/local/opt/openssl/lib
	endif
	ifeq ($(detected_OS),Linux)
		#Arch Linux Fix
		ifeq ($(shell uname -r | grep -o ....$), ARCH)
			OPENSSL_LIB_PATH= /usr/lib/openssl-1.0
		else
		OPENSSL_LIB_PATH= /usr/lib/x86_64-linux-gnu
		endif
	endif
endif
ifndef OPENSSL_INCLUDE_PATH
	ifeq ($(detected_OS),Windows)
		OPENSSL_INCLUDE_PATH= "C:\deps\include"
	endif
	ifeq ($(detected_OS),OSX)
		OPENSSL_INCLUDE_PATH= /usr/local/opt/openssl/include
	endif
	ifeq ($(detected_OS),Linux)
		#Arch Linux Fix
		ifeq ($(shell uname -r | grep -o ....$), ARCH)
			OPENSSL_INCLUDE_PATH= /usr/include/openssl-1.0
		else
			OPENSSL_INCLUDE_PATH= /usr/include/openssl
		endif
	endif
endif
ifndef BDB_LIB_PATH
	ifeq ($(detected_OS),Windows)
		BDB_LIB_PATH= "C:\deps\lib"
	endif
	ifeq ($(detected_OS),OSX)
		BDB_LIB_PATH= /usr/local/opt/db/lib
	endif
	ifeq ($(detected_OS),Linux)
		BDB_LIB_PATH= /usr/lib/x86_64-linux-gnu
	endif
endif
ifndef BDB_INCLUDE_PATH
	ifeq ($(detected_OS),Windows)
		BDB_INCLUDE_PATH= "C:\deps\include"
	endif
	ifeq ($(detected_OS),OSX)
		BDB_INCLUDE_PATH= /usr/local/opt/db/include
	endif
	ifeq ($(detected_OS),Linux)
		BDB_INCLUDE_PATH= /usr/include
	endif
endif

#Oracle DB Support Config
ifndef ORACLE
	override ORACLE= 0
endif
ifneq (${ORACLE}, 1)
	DEFS+= -DUSE_LLD
endif

#Configure Build Environment
ifneq ($(detected_OS),Windows)
INCLUDEPATHS+= $(addprefix -I, $(CURDIR) $(CURDIR)/build $(CURDIR)/src $(CURDIR)/tests)\
	-I$(BDB_INCLUDE_PATH) \
	-I$(OPENSSL_INCLUDE_PATH)
endif
ifeq ($(detected_OS),Windows)
INCLUDEPATHS+= -I"$(CURDIR)" -I"$(CURDIR)/build" -I"$(CURDIR)/src" -I"$(CURDIR)/tests" \
	-I$(BDB_INCLUDE_PATH) \
	-I$(OPENSSL_INCLUDE_PATH)
endif
LIBPATHS+= -L$(BDB_LIB_PATH) \
	-L$(OPENSSL_LIB_PATH)
ifneq ($(detected_OS),OSX)
LIBS+=-ldb_cxx \
	-lssl \
	-lcrypto
endif
DEFS+=  -D$(BUILD_ARCH)

#Fail on warnings
ifdef WARNINGS_FAIL
	CXXFLAGS+= -Werror
endif

#Build with race checking
ifdef RACE_CHECK
    CXXFLAGS+= -fsanitize=thread
	TSAN_OPTIONS="history_size=7"
endif


#Build with memory checking
ifdef LEAK_CHECK
    CXXFLAGS+=-fsanitize=leak
endif


#Build with memory checking
ifdef ADDRESS_CHECK
    CXXFLAGS+= -fsanitize=address \
			   -fno-omit-frame-pointer \
			   -fsanitize-address-use-after-scope
endif


#Build with undefined behavior checking
ifdef UNDEFINED_CHECK
    CXXFLAGS+=  -fsanitize=undefined \
				-fsanitize=shift \
				-fsanitize=shift-exponent \
				-fsanitize=shift-base \
				-fsanitize=integer-divide-by-zero \
				-fsanitize=unreachable \
				-fsanitize=vla-bound \
				-fsanitize=null \
				-fsanitize=return \
				-fsanitize=signed-integer-overflow \
				-fsanitize=bounds \
				-fsanitize=bounds-strict \
				-fsanitize=alignment \
				-fsanitize=object-size \
				-fsanitize=float-divide-by-zero \
				-fsanitize=float-cast-overflow \
				-fsanitize=nonnull-attribute \
				-fsanitize=returns-nonnull-attribute \
				-fsanitize=bool \
				-fsanitize=enum \
				-fsanitize=vptr \
				-fsanitize=pointer-overflow \
				-fsanitize=builtin
endif


#Enable / Disable debug symbols and set appropriate optimization level
ifdef ENABLE_DEBUG
	DEBUG+=-g
	OPTIMIZATION+=-Og
else
	#DEBUG+=-s
	OPTIMIZATION+=-O3
endif

#Display Warnings while compiling
ifdef ENABLE_WARNINGS
	CXXWARNINGS := -Wall -Wextra -Wno-sign-compare -Wno-invalid-offsetof -Wno-unused-parameter -Wformat -Wformat-security -pedantic
	CWARNINGS := -Wall -Wextra -Wno-sign-compare -Wno-unused-parameter -Wno-unknown-pragmas -Wformat -Wformat-security -pedantic
else
	CXXFLAGS+= -w
endif

#Source File List
HEADERS= $(wildcard *.h)

#Run Unit Tests
ifdef UNIT_TESTS
	OBJS = build/Tests_main.o \
		   build/Tests_Legacy_utxo.o \
		   build/Tests_LLC_aes.o \
		   build/Tests_TAO_API_assets.o \
		   build/Tests_TAO_API_finance.o \
		   build/Tests_TAO_API_names.o \
		   build/Tests_TAO_API_supply.o \
		   build/Tests_TAO_API_tokens.o \
		   build/Tests_TAO_API_users.o \
		   build/Tests_TAO_API_util.o \
		   build/Tests_TAO_Ledger_block.o \
		   build/Tests_TAO_Ledger_mempool.o \
           build/Tests_TAO_Ledger_transaction.o \
		   build/Tests_TAO_Ledger_sigchain.o \
		   build/Tests_TAO_Register_objects.o \
		   build/Tests_TAO_Register_rollback.o \
		   build/Tests_TAO_Register_testvm.o \
		   build/Tests_TAO_Operation_conditions.o \
		   build/Tests_TAO_Operation_contract.o \
		   build/Tests_TAO_Operation_debit.o \
           build/Tests_TAO_Operation_credit.o \
		   build/Tests_TAO_Operation_erase.o \
		   build/Tests_TAO_Operation_fees.o \
		   build/Tests_TAO_Operation_migrate.o \
		   build/Tests_TAO_Operation_names.o \
		   build/Tests_TAO_Operation_register.o \
		   build/Tests_TAO_Operation_transfer.o \
           build/Tests_TAO_Operation_claim.o \
		   build/Tests_TAO_Operation_trust.o \
		   build/Tests_TAO_Operation_validate.o \
		   build/Tests_TAO_Operation_write.o \
		   build/Tests_Util_hex.o

	DEFS += -DUNIT_TESTS

#Run benchmarks on subsystems
else ifdef BENCHMARKS
	OBJS = build/Benchmarks_main.o \
		   build/Benchmarks_validate.o \
		   build/Benchmarks_object.o \
		   build/Benchmarks_binary_lru.o \
		   build/Benchmarks_binary_key.o \
		   build/Benchmarks_template_lru.o \
		   build/Benchmarks_ledger.o \

#Live tests for prototyping new code
else ifdef LIVE_TESTS
	OBJS = build/Live_main.o

#Regular production main method
else
	OBJS = build/main.o
endif

OBJS+=  build/LLC_base_uint.o \
		build/LLC_bignum.o \
		build/LLC_eckey.o \
		build/LLC_flkey.o \
		build/LLC_random.o \
		build/LLC_SK_Keccak-compact64.o \
		build/LLC_SK_KeccakDuplex.o \
		build/LLC_SK_KeccakHash.o \
		build/LLC_SK_KeccakSponge.o \
		build/LLC_SK_SK.o \
		build/LLC_SK_skein.o \
		build/LLC_SK_skein_block.o \
		build/LLC_sha3.o \
		build/LLC_blake2b.o \
		build/LLC_argon2.o \
		build/LLC_core.o \
		build/LLC_encoding.o \
		build/LLC_ref.o \
		build/LLC_thread.o \
		build/LLC_aes.o \
		build/LLC_codec.o \
		build/LLC_common.o \
		build/LLC_falcon.o \
		build/LLC_fft.o \
		build/LLC_fpr.o \
		build/LLC_keygen.o \
		build/LLC_rng.o \
		build/LLC_shake.o \
		build/LLC_sign.o \
		build/LLC_vrfy.o \
        build/LLC_x509_cert.o \
        build/LLD_address.o \
        build/LLD_ledger.o \
        build/LLD_legacy.o \
		build/LLD_contract.o \
        build/LLD_local.o \
        build/LLD_register.o \
        build/LLD_trust.o \
		build/LLD_binary_key.o \
		build/LLD_binary_lru.o \
		build/LLD_binary_lfu.o \
		build/LLD_filemap.o \
		build/LLD_global.o \
		build/LLD_hashmap.o \
		build/LLD_shard_hashmap.o \
		build/LLD_hashtree.o \
		build/LLD_key.o \
		build/LLD_sector.o \
		build/LLD_transaction.o \
		build/LLD_xxhash.o \
		build/LLP_base_address.o \
		build/LLP_base_connection.o \
		build/LLP_miner.o \
		build/LLP_connection.o \
        build/LLP_httpnode.o \
		build/LLP_apinode.o \
		build/LLP_data.o \
		build/LLP_ddos.o \
		build/LLP_global.o \
		build/LLP_hosts.o \
		build/LLP_inv.o \
		build/LLP_legacy.o \
		build/LLP_legacy_address.o \
		build/LLP_lisp.o \
		build/LLP_manager.o \
		build/LLP_network.o \
		build/LLP_permissions.o \
		build/LLP_rpcnode.o \
		build/LLP_seeds.o \
		build/LLP_server.o \
		build/LLP_socket.o \
		build/LLP_time.o \
		build/LLP_tritium.o \
		build/LLP_trust_address.o \
		build/API_types_assets_claim.o \
		build/API_types_assets_create.o \
		build/API_types_assets_get.o \
		build/API_types_assets_history.o \
		build/API_types_assets_initialize.o \
		build/API_types_assets_tokenize.o \
		build/API_types_assets_transfer.o \
		build/API_types_assets_update.o \
		build/API_types_dex_buy.o \
		build/API_types_dex_sell.o \
		build/API_types_dex_initialize.o \
		build/API_types_finance_balances.o \
		build/API_types_finance_create.o \
		build/API_types_finance_credit.o \
		build/API_types_finance_debit.o \
		build/API_types_finance_get.o \
		build/API_types_finance_info.o \
		build/API_types_finance_initialize.o \
		build/API_types_finance_list.o \
		build/API_types_finance_migrate.o \
		build/API_types_finance_trustaccounts.o \
		build/API_types_finance_stake.o \
		build/API_types_ledger_block.o \
		build/API_types_ledger_initialize.o \
		build/API_types_ledger_state.o \
		build/API_types_ledger_transaction.o \
		build/API_types_ledger_void.o \
		build/API_types_names_claim.o \
		build/API_types_names_create.o \
		build/API_types_names_get.o \
		build/API_types_names_history.o \
		build/API_types_names_initialize.o \
		build/API_types_names_names.o \
		build/API_types_names_transfer.o \
		build/API_types_names_update.o \
		build/API_types_objects_claim.o \
		build/API_types_objects_history.o \
		build/API_types_objects_list.o \
		build/API_types_objects_transactions.o \
		build/API_types_objects_transfer.o \
		build/API_types_RPC_account.o \
		build/API_types_RPC_daemon.o \
		build/API_types_RPC_info.o \
		build/API_types_RPC_network.o \
		build/API_types_RPC_rpc.o \
		build/API_types_RPC_wallet.o \
		build/API_types_supply_claim.o \
		build/API_types_supply_createitem.o \
		build/API_types_supply_getitem.o \
		build/API_types_supply_history.o \
		build/API_types_supply_initialize.o \
		build/API_types_supply_transfer.o \
		build/API_types_supply_updateitem.o \
		build/API_types_system_lisp.o \
		build/API_types_system_system.o \
		build/API_types_tokens_create.o \
		build/API_types_tokens_credit.o \
		build/API_types_tokens_debit.o \
		build/API_types_tokens_list.o \
		build/API_types_tokens_get.o \
		build/API_types_tokens_initialize.o \
		build/API_types_users_accounts.o \
		build/API_types_users_assets.o \
		build/API_types_users_create.o \
        build/API_types_users_recovery.o \
		build/API_types_users_events.o \
        build/API_types_users_initialize.o \
		build/API_types_users_items.o \
		build/API_types_users_lock.o \
		build/API_types_users_login.o \
		build/API_types_users_logout.o \
		build/API_types_users_names.o \
		build/API_types_users_namespaces.o \
		build/API_types_users_notifications.o \
		build/API_types_users_status.o \
		build/API_types_users_tokens.o \
		build/API_types_users_transactions.o \
		build/API_types_users_unlock.o \
		build/API_types_users_users.o \
		build/API_utils.o \
		build/API_json.o \
        build/API_global.o \
        build/API_cmd.o \
		build/API_conditions.o \
		build/Operation_append.o \
		build/Operation_claim.o \
		build/Operation_coinbase.o \
		build/Operation_condition.o \
		build/Operation_contract.o \
		build/Operation_cost.o \
		build/Operation_create.o \
		build/Operation_credit.o \
		build/Operation_debit.o \
        build/Operation_execute.o \
		build/Operation_fee.o \
		build/Operation_genesis.o \
		build/Operation_legacy.o \
		build/Operation_migrate.o \
		build/Operation_transfer.o \
		build/Operation_trust.o \
		build/Operation_validate.o \
		build/Operation_write.o \
		build/Register_address.o \
		build/Register_basevm.o \
		build/Register_build.o \
		build/Register_create.o \
		build/Register_names.o \
		build/Register_object.o \
		build/Register_rollback.o \
		build/Register_state.o \
		build/Register_unpack.o \
		build/Register_verify.o \
		build/Ledger_base_minter.o \
		build/Ledger_block.o \
		build/Ledger_chainstate.o \
		build/Ledger_checkpoints.o \
		build/Ledger_constants.o \
		build/Ledger_create.o \
		build/Ledger_difficulty.o \
		build/Ledger_genesis.o \
		build/Ledger_locator.o \
		build/Ledger_mempool.o \
		build/Ledger_prime.o \
		build/Ledger_process.o \
		build/Ledger_retarget.o \
		build/Ledger_sigchain.o \
		build/Ledger_stake.o \
		build/Ledger_state.o \
		build/Ledger_supply.o \
		build/Ledger_syncblock.o \
		build/Ledger_timelocks.o \
		build/Ledger_transaction.o \
		build/Ledger_tritium.o \
		build/Ledger_tritium_minter.o \
		build/Util_args.o \
		build/Util_base58.o \
		build/Util_base64.o \
		build/Util_config.o \
		build/Util_datastream.o \
		build/Util_debug.o \
		build/Util_encoding.o \
        build/Util_hex.o \
		build/Util_filesystem.o \
		build/Util_memory.o \
		build/Util_signals.o \
		build/Util_softfloat.o \
        build/Util_string.o \
		build/Util_version.o \
		build/Legacy_account.o \
		build/Legacy_address.o \
		build/Legacy_addressbook.o \
		build/Legacy_ambassador.o \
		build/Legacy_basickeystore.o \
        build/Legacy_coinbase.o \
		build/Legacy_create.o \
		build/Legacy_crypter.o \
		build/Legacy_cryptokeystore.o \
		build/Legacy_db.o \
		build/Legacy_enum.o \
		build/Legacy_evaluate.o \
		build/Legacy_keypool.o \
		build/Legacy_keypoolentry.o \
		build/Legacy_keystore.o \
		build/Legacy_legacy.o \
		build/Legacy_legacy_minter.o \
		build/Legacy_masterkey.o \
		build/Legacy_mempool.o \
		build/Legacy_merkle.o \
		build/Legacy_outpoint.o \
		build/Legacy_output.o \
		build/Legacy_reservekey.o \
		build/Legacy_script.o \
		build/Legacy_secret.o \
		build/Legacy_signature.o \
		build/Legacy_transaction.o \
		build/Legacy_trust.o \
		build/Legacy_trustkey.o \
		build/Legacy_txin.o \
		build/Legacy_txout.o \
		build/Legacy_wallet.o \
		build/Legacy_walletdb.o \
		build/Legacy_walletkey.o \
		build/Legacy_wallettx.o

###############################################################################
ifeq ($(detected_OS),Windows)

#Configure OS Specific Compiler Output
ifndef VERBOSE
	CXX= @echo Compiling $< && g++
else
	CXX= g++
endif

#Configure OS Specific Build Environment
LIBS+= -l kernel32 \
	-l user32 \
	-l gdi32 \
	-l comdlg32 \
	-l winspool \
	-l winmm \
	-l shell32 \
	-l comctl32 \
	-l ole32 \
	-l oleaut32 \
	-l uuid \
	-l rpcrt4 \
	-l advapi32 \
	-l ws2_32 \
	-l shlwapi \
	-l iphlpapi
DEFS+= -DWIN32 \
	-D_WINDOWS

#OS Specific Compiler Flags
CXXFLAGS+= -mthreads \
	-static \
	-static-libgcc \
	-static-libstdc++ \
	$(OPTIMIZATION) \
	$(DEBUG) \
	$(DEFS) \
	$(INCLUDEPATHS)

#Set CFLAGS and Warnings
CFLAGS:= $(CXXFLAGS)
CFLAGS+= $(CWARNINGS)

#set -std=c++ for all but c compiling
CXXFLAGS+=-std=c++11
CXXFLAGS+= $(CXXWARNINGS)


#OS Specific Targets and instructions
all: release/nexus.exe

build/%.o: ./src/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/LLC_%.o: ./src/LLC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/LLC_%.o: ./src/LLC/hash/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/LLC_SK_%.o: ./src/LLC/hash/SK/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/LLC_%.o: ./src/LLC/hash/Skein/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -o $@ $<

build/LLC_%.o: ./src/LLC/hash/SHA3/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -o $@ $<

build/LLC_SK_%.o: ./src/LLC/hash/SK/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -o $@ $<

build/LLC_%.o: ./src/LLC/hash/argon2/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -o $@ $<

build/LLC_%.o: ./src/LLC/hash/argon2/blake2/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -o $@ $<

build/LLC_%.o: ./src/LLC/aes/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -o $@ $<

build/LLC_%.o: ./src/LLC/falcon/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -o $@ $<

build/LLD_%.o: ./src/LLD/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/LLD_%.o: ./src/LLD/hash/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -o $@ $<

build/LLP_%.o: ./src/LLP/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_%.o: ./src/TAO/API/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_assets_%.o: ./src/TAO/API/types/assets/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_dex_%.o: ./src/TAO/API/types/dex/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_finance_%.o: ./src/TAO/API/types/finance/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_ledger_%.o: ./src/TAO/API/types/ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_names_%.o: ./src/TAO/API/types/names/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_objects_%.o: ./src/TAO/API/types/objects/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_RPC_%.o: ./src/TAO/API/types/RPC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_supply_%.o: ./src/TAO/API/types/supply/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_tokens_%.o: ./src/TAO/API/types/tokens/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_users_%.o: ./src/TAO/API/types/users/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/API_types_system_%.o: ./src/TAO/API/types/system/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Ledger_%.o: ./src/TAO/Ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Operation_%.o: ./src/TAO/Operation/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Register_%.o: ./src/TAO/Register/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Util_%.o: ./src/Util/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Legacy_%.o: ./src/Legacy/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_%.o: ./tests/unit/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_Legacy_%.o: ./tests/unit/Legacy/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_LLC_%.o: ./tests/unit/LLC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_LLD_%.o: ./tests/unit/LLD/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_LLP_%.o: ./tests/unit/LLP/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_TAO_API_%.o: ./tests/unit/TAO/API/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_TAO_Ledger_%.o: ./tests/unit/TAO/Ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_TAO_Operation_%.o: ./tests/unit/TAO/Operation/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_TAO_Register_%.o: ./tests/unit/TAO/Register/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Tests_Util_%.o: ./tests/unit/Util/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Benchmarks_%.o: ./tests/bench/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Benchmarks_%.o: ./tests/bench/LLC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Benchmarks_%.o: ./tests/bench/LLD/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Benchmarks_%.o: ./tests/bench/LLP/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Benchmarks_%.o: ./tests/bench/TAO/Ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Benchmarks_%.o: ./tests/bench/TAO/Operation/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Benchmarks_%.o: ./tests/bench/TAO/Register/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Benchmarks_%.o: ./tests/bench/Util/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

build/Live_%.o: ./tests/live/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

release/nexus.exe: $(OBJS:build/%=build/%)
	$(CXX) $(CXXFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)
	@echo " "
	@echo Finished building nexus.exe
	@echo " "

clean:
	-rm -f release\nexus.exe
	-rm -f build/*.o
	-rm -f build/*.P
	-rm -f src/build.h

endif
###############################################################################
ifeq ($(detected_OS),OSX)

#Configure OS Specific Compiler Output
ifndef VERBOSE
	CXX= @echo Compiling $< && llvm-g++
else
	CXX= llvm-g++
endif

#Configure OS Specific Build Environment
DEFS+= -DMAC_OSX \
	-DMSG_NOSIGNAL=0
LIBS+= $(BDB_LIB_PATH)/libdb_cxx.a \
	$(OPENSSL_LIB_PATH)/libssl.a \
	$(OPENSSL_LIB_PATH)/libcrypto.a



#OS Specific Compiler Flags
CXXFLAGS+= -mmacosx-version-min=10.13 \
	-O3 \
	$(DEFS) \
	$(DEBUG) \
	$(INCLUDEPATHS)

#Set CFLAGS and Warnings
CFLAGS:= $(CXXFLAGS)
CFLAGS+= $(CWARNINGS)

#set -std=c++ for all but c compiling
CXXFLAGS+=-std=c++11
CXXFLAGS+= $(CXXWARNINGS)

#OS Specific Targets and instructions
all: nexus

build/%.o: src/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_SK_%.o: src/LLC/hash/SK/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/Skein3Fish/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/SHA3/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_SK_%.o: src/LLC/hash/SK/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/argon2/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/argon2/blake2/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/aes/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/falcon/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLD_%.o: src/LLD/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLD_%.o: src/LLD/hash/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLP_%.o: src/LLP/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_%.o: src/TAO/API/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_assets_%.o: src/TAO/API/types/assets/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_dex_%.o: src/TAO/API/types/dex/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_finance_%.o: src/TAO/API/types/finance/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_ledger_%.o: src/TAO/API/types/ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_names_%.o: src/TAO/API/types/names/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_objects_%.o: src/TAO/API/types/objects/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_RPC_%.o: src/TAO/API/types/RPC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_supply_%.o: src/TAO/API/types/supply/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_tokens_%.o: src/TAO/API/types/tokens/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_users_%.o: src/TAO/API/types/users/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_system_%.o: src/TAO/API/types/system/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Ledger_%.o: src/TAO/Ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Operation_%.o: src/TAO/Operation/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Register_%.o: src/TAO/Register/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Util_%.o: src/Util/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Legacy_%.o: src/Legacy/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_%.o: tests/unit/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_Legacy_%.o: tests/unit/Legacy/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_LLC_%.o: tests/unit/LLC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_LLD_%.o: tests/unit/LLD/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_LLP_%.o: tests/unit/LLP/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_TAO_API_%.o: tests/unit/TAO/API/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_TAO_Ledger_%.o: tests/unit/TAO/Ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_TAO_Operation_%.o: tests/unit/TAO/Operation/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_TAO_Register_%.o: tests/unit/TAO/Register/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_Util_%.o: tests/unit/Util/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/LLC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/LLD/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/LLP/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/TAO/Ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/TAO/Operation/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/TAO/Register/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/Util/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Live_%.o: tests/live/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

nexus: $(OBJS:build/%=build/%)
	$(CXX) $(CXXFLAGS) -dead_strip -o $@ $(LIBPATHS) $^ $(LIBS)
	@echo ' '
	@echo Finished building nexus
	@echo ' '

clean:
	-rm -f nexus
	-rm -f build/*.o
	-rm -f build/*.P
	-rm -f src/build.h

endif
###############################################################################
ifeq ($(detected_OS),Linux)

#Configure OS Specific Compiler Output
ifndef VERBOSE
CXX= @echo Compiling $< && g++
else
CXX= g++
endif

#Configure OS Specific Build Environment
LIBS+= -Wl,-Bdynamic \
	-ldl \
	-lpthread

#Arch Linux Fix
ifeq ($(shell uname -r | grep -o ....$), ARCH)
	TMPLIBS := $(LIBS)
	LIBS= $(filter-out -lssl -lcrypto,$(TMPLIBS))
	LIBS+= /usr/lib/openssl-1.0/libssl.so \
		/usr/lib/openssl-1.0/libcrypto.so
endif

#OS Specific Compiler Flags
CXXFLAGS+= -pthread \
	-fstack-protector \
	-D_FORTIFY_SOURCE=2 \
	-Wl,-z,relro \
	-Wl,-z,now \
	$(DEBUG) \
    $(OPTIMIZATION) \
	$(DEFS) \
	$(INCLUDEPATHS)


#Set CFLAGS and Warnings
CFLAGS:= $(CXXFLAGS)
CFLAGS+= $(CWARNINGS)

#set -std=c++ for all but c compiling
CXXFLAGS+=-std=c++11
CXXFLAGS+= $(CXXWARNINGS)

#OS Specific Targets and instructions
all: nexus

build/%.o: src/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_SK_%.o: src/LLC/hash/SK/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/Skein/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/SHA3/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_SK_%.o: src/LLC/hash/SK/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/argon2/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/hash/argon2/blake2/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/aes/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLC_%.o: src/LLC/falcon/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLD_%.o: src/LLD/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLD_%.o: src/LLD/hash/%.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -x c -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/LLP_%.o: src/LLP/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_%.o: src/TAO/API/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_assets_%.o: src/TAO/API/types/assets/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_dex_%.o: src/TAO/API/types/dex/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_finance_%.o: src/TAO/API/types/finance/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_ledger_%.o: src/TAO/API/types/ledger/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_names_%.o: src/TAO/API/types/names/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_objects_%.o: src/TAO/API/types/objects/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_RPC_%.o: src/TAO/API/types/RPC/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_supply_%.o: src/TAO/API/types/supply/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_tokens_%.o: src/TAO/API/types/tokens/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_users_%.o: src/TAO/API/types/users/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/API_types_system_%.o: src/TAO/API/types/system/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Ledger_%.o: src/TAO/Ledger/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Operation_%.o: src/TAO/Operation/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Register_%.o: src/TAO/Register/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Util_%.o: src/Util/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Legacy_%.o: src/Legacy/%.cpp
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_%.o: tests/unit/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_Legacy_%.o: tests/unit/Legacy/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_LLC_%.o: tests/unit/LLC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_LLD_%.o: tests/unit/LLD/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_LLP_%.o: tests/unit/LLP/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_TAO_API_%.o: tests/unit/TAO/API/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_TAO_Ledger_%.o: tests/unit/TAO/Ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_TAO_Operation_%.o: tests/unit/TAO/Operation/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_TAO_Register_%.o: tests/unit/TAO/Register/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Tests_Util_%.o: tests/unit/Util/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/LLC/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/LLD/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/LLP/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/TAO/Ledger/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/TAO/Operation/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/TAO/Register/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Benchmarks_%.o: tests/bench/Util/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

build/Live_%.o: tests/live/%.cpp $(HEADERS)
	$(CXX) -c $(CXXFLAGS) -MMD -o $@ $<
	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	-e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
	rm -f $(@:%.o=%.d)

#build the final executable
nexus: $(OBJS:obj/%=build/%)
	$(CXX) $(CXXFLAGS) -rdynamic -o $@ $^ $(LDFLAGS) $(LIBS)
	@echo ' '
	@echo Finished building nexus
	@echo ' '

clean:
	-rm -f nexus
	-rm -f build/*.o
	-rm -f build/*.P
	-rm -f src/build.h

endif
###############################################################################
##
